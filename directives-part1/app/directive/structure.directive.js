System.register(["angular2/core", "./unless.directive"], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, unless_directive_1;
    var StructureDirective;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (unless_directive_1_1) {
                unless_directive_1 = unless_directive_1_1;
            }],
        execute: function() {
            StructureDirective = (function () {
                function StructureDirective() {
                    this.myList = [
                        'Apple',
                        'Milk',
                        'Eggs',
                        'Ham',
                        'Cheese'
                    ];
                }
                StructureDirective = __decorate([
                    core_1.Component({
                        selector: 'structure-directive',
                        directives: [unless_directive_1.UnlessDirective],
                        template: "\n    <section class=\"examples top\">\n        <div layout=\"column\" class=\"md-inline-form\">\n            <md-toolbar class=\"demo-toolbar md-primary\">\n                <div class=\"md-toolbar-tools\">\n                  <h3>Structural Directives</h3>\n                  <span flex=\"\"></span>\n                </div>\n            </md-toolbar>\n            <md-content layout-padding>\n                <div class=\"section1\">\n                    <br>\n                      <div class=\"directive\">\n                        <h3>Custom Directive *ngUnless</h3>\n                        <div>\n                            Enter true or false\n                            <br>\n                            <input type=\"text\" #condition (keyup)=\"0\">\n                        </div>\n                        <br>\n                        <div *ngUnless=\"condition.value != 'false'\">\n                            <div>This is my template - show only if false.</div>\n                        </div>\n                      </div>\n\n                      <div class=\"directive\">\n                        <h3>*ngIf</h3>\n                        <div>\n                            Enter a number greater than 10\n                            <br>\n                            <input type=\"text\" #number (keyup)=\"0\">\n                        </div>\n                        <br>\n                        <div *ngIf=\"number.value > 10\">\n                            Number is greater than 10\n                        </div>\n                      </div>\n                      <div class=\"directive\">\n                        <h3>*ngFor</h3>\n                        <div>\n                            <ul>\n                                <li *ngFor=\"#item of myList, #i = index\">{{item}}, {{i}}</li>\n                            </ul>\n                        </div>\n                      </div>\n                      <div class=\"directive\">\n                        <h3>[ngSwitch]</h3>\n                        <div>\n                            Enter red, blue, or green\n                            <input type=\"text\" #color (keyup)=\"0\">\n                        </div>\n                        <br>\n                        <div [ngSwitch]=\"color.value\">\n                            <template [ngSwitchWhen]=\"'red'\">\n                                <span class=\"red\">Color is red</span>\n                            </template>\n                            <template [ngSwitchWhen]=\"'blue'\">\n                                <span class=\"blue\">Color is blue</span>\n                            </template>\n                            <template [ngSwitchWhen]=\"'green'\">\n                                <span class=\"green\">Color is green</span>\n                            </template>\n                            <template ngSwitchDefault>\n                                <span>Default</span>\n                            </template>\n                        </div>\n                      </div>\n                </div>\n            </md-content>\n        </div>\n    </section>\n    "
                    }), 
                    __metadata('design:paramtypes', [])
                ], StructureDirective);
                return StructureDirective;
            })();
            exports_1("StructureDirective", StructureDirective);
        }
    }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpcmVjdGl2ZS9zdHJ1Y3R1cmUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbIlN0cnVjdHVyZURpcmVjdGl2ZSIsIlN0cnVjdHVyZURpcmVjdGl2ZS5jb25zdHJ1Y3RvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBSUE7Z0JBaUZJQTtvQkFFSUMsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0E7d0JBQ1ZBLE9BQU9BO3dCQUNQQSxNQUFNQTt3QkFDTkEsTUFBTUE7d0JBQ05BLEtBQUtBO3dCQUNMQSxRQUFRQTtxQkFDWEEsQ0FBQ0E7Z0JBRU5BLENBQUNBO2dCQTNGTEQ7b0JBQUNBLGdCQUFTQSxDQUFDQTt3QkFDUEEsUUFBUUEsRUFBRUEscUJBQXFCQTt3QkFDL0JBLFVBQVVBLEVBQUVBLENBQUNBLGtDQUFlQSxDQUFDQTt3QkFDN0JBLFFBQVFBLEVBQUVBLCtqR0F1RVRBO3FCQUNKQSxDQUFDQTs7dUNBaUJEQTtnQkFBREEseUJBQUNBO1lBQURBLENBNUZBLEFBNEZDQSxJQUFBO1lBNUZELG1EQTRGQyxDQUFBIiwiZmlsZSI6ImRpcmVjdGl2ZS9zdHJ1Y3R1cmUuZGlyZWN0aXZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIERpcmVjdGl2ZSwgUmVuZGVyZXJ9IGZyb20gXCJhbmd1bGFyMi9jb3JlXCI7XG5pbXBvcnQge0VsZW1lbnRSZWZ9IGZyb20gXCJhbmd1bGFyMi9jb3JlXCI7XG5pbXBvcnQge1VubGVzc0RpcmVjdGl2ZX0gZnJvbSBcIi4vdW5sZXNzLmRpcmVjdGl2ZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3N0cnVjdHVyZS1kaXJlY3RpdmUnLFxuICAgIGRpcmVjdGl2ZXM6IFtVbmxlc3NEaXJlY3RpdmVdLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJleGFtcGxlcyB0b3BcIj5cbiAgICAgICAgPGRpdiBsYXlvdXQ9XCJjb2x1bW5cIiBjbGFzcz1cIm1kLWlubGluZS1mb3JtXCI+XG4gICAgICAgICAgICA8bWQtdG9vbGJhciBjbGFzcz1cImRlbW8tdG9vbGJhciBtZC1wcmltYXJ5XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1kLXRvb2xiYXItdG9vbHNcIj5cbiAgICAgICAgICAgICAgICAgIDxoMz5TdHJ1Y3R1cmFsIERpcmVjdGl2ZXM8L2gzPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gZmxleD1cIlwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvbWQtdG9vbGJhcj5cbiAgICAgICAgICAgIDxtZC1jb250ZW50IGxheW91dC1wYWRkaW5nPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWN0aW9uMVwiPlxuICAgICAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpcmVjdGl2ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkN1c3RvbSBEaXJlY3RpdmUgKm5nVW5sZXNzPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRW50ZXIgdHJ1ZSBvciBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiAjY29uZGl0aW9uIChrZXl1cCk9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgKm5nVW5sZXNzPVwiY29uZGl0aW9uLnZhbHVlICE9ICdmYWxzZSdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlRoaXMgaXMgbXkgdGVtcGxhdGUgLSBzaG93IG9ubHkgaWYgZmFsc2UuPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaXJlY3RpdmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4qbmdJZjwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVudGVyIGEgbnVtYmVyIGdyZWF0ZXIgdGhhbiAxMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiAjbnVtYmVyIChrZXl1cCk9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJudW1iZXIudmFsdWUgPiAxMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE51bWJlciBpcyBncmVhdGVyIHRoYW4gMTBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaXJlY3RpdmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4qbmdGb3I8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSAqbmdGb3I9XCIjaXRlbSBvZiBteUxpc3QsICNpID0gaW5kZXhcIj57e2l0ZW19fSwge3tpfX08L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlyZWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+W25nU3dpdGNoXTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVudGVyIHJlZCwgYmx1ZSwgb3IgZ3JlZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiAjY29sb3IgKGtleXVwKT1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBbbmdTd2l0Y2hdPVwiY29sb3IudmFsdWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgW25nU3dpdGNoV2hlbl09XCIncmVkJ1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInJlZFwiPkNvbG9yIGlzIHJlZDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBbbmdTd2l0Y2hXaGVuXT1cIidibHVlJ1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJsdWVcIj5Db2xvciBpcyBibHVlPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIFtuZ1N3aXRjaFdoZW5dPVwiJ2dyZWVuJ1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImdyZWVuXCI+Q29sb3IgaXMgZ3JlZW48L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgbmdTd2l0Y2hEZWZhdWx0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5EZWZhdWx0PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvbWQtY29udGVudD5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9zZWN0aW9uPlxuICAgIGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBTdHJ1Y3R1cmVEaXJlY3RpdmV7XG5cbiAgICBteUxpc3Q6IHN0cmluZ1tdO1xuXG4gICAgY29uc3RydWN0b3IoKXtcblxuICAgICAgICB0aGlzLm15TGlzdCA9IFtcbiAgICAgICAgICAgICdBcHBsZScsXG4gICAgICAgICAgICAnTWlsaycsXG4gICAgICAgICAgICAnRWdncycsXG4gICAgICAgICAgICAnSGFtJyxcbiAgICAgICAgICAgICdDaGVlc2UnXG4gICAgICAgIF07XG5cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
